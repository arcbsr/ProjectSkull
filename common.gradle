apply plugin: 'org.jetbrains.kotlin.android'
// Apply the correct plugin based on the module type
if (project.plugins.hasPlugin("com.android.application")) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdk rootProject.ext.androidExt.compileSdkVersion

    defaultConfig {
        minSdk rootProject.ext.androidExt.minSdkVersion
        targetSdk rootProject.ext.androidExt.targetSdkVersion
        versionCode rootProject.ext.androidExt.versionCode
        versionName rootProject.ext.androidExt.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.androidExt.sdkSourceCompatibility
        targetCompatibility rootProject.ext.androidExt.sdkTargetCompatibility
    }

    kotlinOptions {
        jvmTarget = rootProject.ext.kotlinJvmTarget
    }

    buildFeatures {
        compose true
        dataBinding true
    }

    composeOptions {
        kotlinCompilerExtensionVersion rootProject.ext.composeCompilerVersion
    }

    packagingOptions {
        resources.excludes += '/META-INF/{AL2.0,LGPL2.1}'
    }
    viewBinding {
        enabled = true
    }
    sourceSets {
        main {
            res {
                srcDirs 'src\\main\\res', 'src\\main\\res\\raw'
            }
        }
    }
}

dependencies {
    implementation rootProject.ext.libs.core_ktx
    implementation rootProject.ext.libs.appcompat
    implementation rootProject.ext.libs.material
    implementation rootProject.ext.libs.coroutines_core
    implementation rootProject.ext.libs.retrofit
    implementation rootProject.ext.libs.gson
    implementation rootProject.ext.libs.lifecycle_runtime_ktx
    implementation rootProject.ext.libs.activity_compose
    implementation platform(rootProject.ext.libs.compose_bom)
    implementation rootProject.ext.libs.compose_ui
    implementation rootProject.ext.libs.compose_ui_graphics
    implementation rootProject.ext.libs.compose_ui_tooling_preview
    implementation rootProject.ext.libs.compose_material3
    implementation rootProject.ext.libs.base_recyclerview_adapter_helper
    implementation rootProject.ext.libs.circleimageview
// https://github.com/drakeet/MultiType for multi adapter

    testImplementation rootProject.ext.libs.junit
    androidTestImplementation rootProject.ext.libs.android_test_junit
    androidTestImplementation rootProject.ext.libs.espresso_core
    androidTestImplementation platform(rootProject.ext.libs.compose_bom)
    androidTestImplementation rootProject.ext.libs.compose_ui_test_junit4
    debugImplementation rootProject.ext.libs.compose_ui_tooling
    debugImplementation rootProject.ext.libs.compose_ui_test_manifest
}

